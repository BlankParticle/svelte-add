{"type":"data","nodes":[null,{"type":"data","data":[{"adderInfo":1},{"emoji":2,"heuristics":3,"name":10,"options":11,"usageMarkdown":12},"ğŸ•¸",[4,6,8],{"description":5},"`graphql` is installed",{"description":7},"`graphql-helix` is installed",{"description":9},"`src/routes/graphql.js` or `src/routes/graphql.ts` exists","(out of date) GraphQL server",{},[13,14,15,16,17,18],"\n\u003Cp>You can create a GraphQL schema in \u003Ccode>src/graphql/schema.ts\u003C/code> using any library or technique you want. Additionally, you can set the \u003Ccode>defaultQuery\u003C/code> that shows up when GraphiQL is loaded in the browser.\u003C/p>\n","\n\u003Cp>You can query your API (with POST requests) at the /graphql endpoint.\u003C/p>\n","\n\u003Cp>You can visit GraphiQL in the browser at the /graphql endpoint.\u003C/p>\n","\n\u003Cp>You can see an example of how you may set up resolver-level authorization with the \u003Ccode>contextFactory\u003C/code> line in \u003Ccode>src/routes/graphql.ts\u003C/code> and the \u003Ccode>authorization\u003C/code> argument in \u003Ccode>src/graphql/schema.ts\u003C/code>.\u003C/p>\n","\n\u003Cp>The \u003Ccode>/\u003C/code> page (in your \u003Ccode>src/routes/index.svelte\u003C/code> file) will show an example of how to use your GraphQL API in \u003Ccode>load\u003C/code>.\u003C/p>\n","\n\u003Cp>You \u003Ca href=\"https://github.com/svelte-add/graphql/issues/1\" rel=\"nofollow\">\u003Cem>cannot\u003C/em> use GraphQL subscriptions\u003C/a>.\u003C/p>\n"],"uses":{"params":["adder"]}}]}
